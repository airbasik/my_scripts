# -*- coding: utf-8 -*-

import math

H = 20000
mc = 100
ro = 0.08890993456720298  # 20км
ro_0 = 1.2250026055059986
lya = 33
a = 295
Vkreis = 89  # м/с 504км/ч
oC0 = 0.15
Cymaxpos = 2  # егер 88стр
Cymax = 1.8  # от профиля
omT = 0.5471  # статистика
Vpos = 30
hi = 0
narrowing = 4
cekreis = 0.34

# для отвала поляры
k = 1.02  # k=1,02 – для трапециевидных крыльев, k=1,6 - для треугольных и близких к ним крыльев
# Относительная энерговооруженность при заданной длине разбега
lrazb = 800
frazb = 0.02
Krazb = 10
Cymaxvzl = 1

# fкач коэффициент трения качения для размокшего грунта.
fkach = 0.02

# Относительная энерговооруженность при отказе двигателя
ndv = 2
Knab = 12

# Для расчёта относительной массы крыла в первом приближении
e1 = 1  # Доля топлива
e2 = 1  # Доля движка
e3 = 1  # Доля оборудования
oz1 = 1 / 3  # относительная координата полуразмаха топлива
oz2 = 1 / 3  # относительная координата полуразмаха движка
oz3 = 1 / 3  # относительная координата полуразмаха оборудования
nA = 3.5
b1 = 0.115  # 0,08 - 0,115 – для транспортных самолетов;
b2 = 0.15  # 0,15 – для дозвуковых самолетов;

# Для определения относительной массы топлива
hivnt = 0.6
tnz = 1
KTC = 1.2
t = 120

# для определения массы силовой устанвки
ydv = 0.22  # 0.18...0.22
k1 = 2.26
k2 = 3.14

Mkreis = round(Vkreis / a, 2)  # Крейсеркий мах
print('Крейсерское значения числа маха Mkreis = ', Mkreis)

Cxa0 = round(0.8 * (0.9 + 0.15 * Mkreis) * (0.0083 * (1 + 3 * oC0) + 0.004), 5)  # отсутствует фюзеляж
print('Лобовое сопротивление при нулевой подъёмной силе Cxa0 = ', Cxa0)

lya_ef = round(lya / (1 + 0.025 * lya), 2)
D0 = round(k / math.pi / lya_ef, 5)
print('Эффективное удлинение крыла lya_ef = ', lya_ef)
print('Коэффициент отвала поляры D0 = ', D0)

Kmax = round(1 / 2 / (D0 * Cxa0) ** 0.5, 2)
print('Максимальный коэфицент аэродинамического качества Kmax = ', Kmax)

print('###Определение удельной нагрузки на крыло')
p01 = round(Cymaxpos * Vpos ** 2 / 24.5 / (1 - omT), 2)
print('Удельная нагрузка на крыло при посадке p01 =', p01, 'даН/м^2')
Cykreis = round(0.9 * Cymax, 2)
print('Крейсерский кэффициент подъёмной силы Cykreis =', Cykreis)
p02 = round(Cykreis * ro * a ** 2 / 2 * Mkreis ** 2 / (1 - 0.6 * omT), 2)
print('Удельная нагрузка на крыло во время крейсерского полёта p02 =', p02, 'даН/м^2')

if p02 > p01:
    p0 = p01
    print('Расчётная удельная нагрузка на крыло p0 =', p01, 'даН/м^2')

else:
    p0 = p02
    print('Расчётная удельная нагрузка на крыло p0 =', p02, 'даН/м^2')

KvnH = 0.9978 * math.exp(-0.071 * H / 1000)
print('Коэффицент учитывающий высотную характеристику двигателя KvnH =', KvnH)
oN01 = round(Cxa0 * ro / ro_0 * Vkreis ** 3 / 854 / p0 / KvnH, 4)
print('Относительная энерговооруженность крейсерского режима oN01 =', oN01)

oN02 = round(p0 / 9.81 / ro_0 / 1.09 / lrazb + frazb, 4)
print('Относительная энерговооруженность при заданной длине разбега oN02 =', oN02)

oN03 = round(1.4 * fkach, 4)
print('Относительная энерговооруженность при страгивания с места oN03 =', oN03)

oN04 = round(0.93 * 1.5 * ndv / (ndv - 1) / 12 * (0.062 / Cymaxvzl / 0.9 + Cymaxvzl * 0.9 / math.pi / lya + 0.024), 4)
print('Относительная энерговооруженность при взлёте с отказавшим двигателем oN04 =', oN04)

qwert = [oN01, oN02, oN03, oN04]
qwert = sorted(qwert, reverse=True)
oN = qwert[0]
print('Относительная энерговооруженность oN = ', oN)  # выбор наибольшого значеня удельно энерговооруженности

print('###Определение исходной массы ЛА')
omT0 = omT
print('Исходная относительная масса топлива omT0 =', omT0, )
omk0 = 0.2945
print('Исходная относительная масса конструкции omk0 =', omk0, )
omcy0 = 0.1104
print('Исходная относительная масса силовой установки omcy0 =', omcy0, )
omob0 = 0.0412
print('Исходная относительная масса оборудования omob0 =', omob0, )
m0 = round(mc / (1 - omT0 - omk0 - omcy0 - omob0), 2)
print('Исходная масса летательного аппарта m0 =', m0, 'кг')

print('###Определение массы конструкции первого приближения')
alf = 0.027 / math.cos(hi * math.pi / 180)
print('Коэффициент учитывающий стреловидность крыла', alf)
fi = round(1 - 3 * (narrowing + 1) / (narrowing + 2) * (e1 * oz1 * omT0 + e2 * oz2 * omcy0 + e3 * oz3 * omob0), 4)
print('Коэфициент разгрузки крыла fi = ', fi)
omk1 = round((alf * fi * nA * ((m0 * lya / 1000 / p0) ** 0.5 + 5.5 / p0)) * (1 + b2) + 0.065, 4)
print('Относительная масса конструкции omk1 =', omk1)

print('###Определения относительной массы топливной системы')
Kkreis = round(Kmax * 0.8, 2)
print('Крейсерское значение числа маха', Kkreis)
omT01 = round(Vkreis * t * cekreis / 270 / hivnt / Kkreis / (
            1 + 0.625 * Vkreis * t * cekreis / 270 / hivnt / Kkreis) + 1 / 75 / Kmax * cekreis * Vkreis * tnz / hivnt + 0.006,
              4)
print('Относительная масса топлива крейсерского полёта и набора высоты omT01 =', omT01)
omTnrp = round(0.0035 * H / 1000 / (1 - 0.004 * H / 1000), 4)
print('Относительная масса топлива взлётно-посадочных режимов omTnrp =', omTnrp)
omTnz = round(0.9 * cekreis / Kmax, 4)
print('Относительная масса топлива навигационного запаса omTnz =', omTnz)
omTpr = 0.005
print('Относительная масса топлива прочих расходов omTpr =', omTpr)
omT1 = omT01 + omTnrp + omTnz + omTpr
print('Относительная масса топлива omT1 = ', omT1)
omTS1 = round(omT1 * KTC, 4)
print('Относительная масса топливной системы omTS1 = ', omTS1)

print('###Определение относительной массы силовой установки')
N0 = round(m0 * 9.81 / 10 * oN, 2)
print('Приблёженное значения мощности для нахождения kcy, N0 =', N0, 'кВт')
kcy = 1.1 + 1.36 / ydv * (0.1 + 0.9 / N0 ** (1 / 3))
print('Коэффициент силовой установки kcy =', kcy)
omcy1 = round(kcy * ydv * oN, 4)
print('Относительная масса силовой установки omcy =', omcy1)

print('###Определение относительной массы оборудования')
omob1 = 0.0361
print('Относительная масса оборудования omob1 =', omob1)

print('###Определение массы ЛА первого приближения')
m1 = round(mc / (1 - (omk1 + omTS1 + omcy1 + omob1)), 2)
print('Масса ЛА в первом приближении m1 =', m1, 'кг')

error = round(math.fabs(m1 - m0) / m0 * 100, 2)
print('погрешность error =', error, '%')
if error < 7:
    print('!Погрешность в пределах допуска!')
else:
    print('!!!Погрешность выходит за пределы допуска, требуется уточнение относительных масс!!!')

print('ОПРЕДЕЛЕНИЕ ОСНОВНЫХ ПАРАМЕТРОВ ЛЕТАТЕЛЬНОГО АППАРАТА')

print('###Определение массы силовой установки')

Ne0 = round(m1 * 9.81 / 10 * oN, )
print('Суммарная мощность двигателей Ne0 =', Ne0, 'кВт')
Ne01 = round(Ne0 / ndv, )
print('Мощность одного двигателя Ne01 =', Ne01, 'кВт')
mdv1 = round(10 * Ne01 * ydv / 9.81, 1)
print('Масса одного двигателя mdv1 =', mdv1, 'кг')

print('###Определение массы и обьема топлива')

mT = round(omTS1 / KTC * m1, 1)
print('Масса топлива mT =', mT, 'кг')
Vtb = round(mT / 800 * 1.05, 2)
print('Объём топливных баков Vtb =', Vtb, 'м^3')

print('###Определение параметров крыла')

S = round(m1 * 9.81 / 10 / p0, 2)
print('Площадь крыла крыла S =', S, 'м')
l = round(math.sqrt(lya * S), 2)
print('Размах крыла l =', l, 'м')
b0 = round(2 * narrowing * S / (1 + narrowing) / l, 3)
print('Корневая хорда крыла b0 =', b0, 'м')
bk = round(b0 / 4, 3)
print('Концевая хорда крыла bk =', bk, 'м')
ba = round(2 / 3 * b0 * (1 + 1 / narrowing / (narrowing + 1)), 3)
print('Средняя аэродинамическая хорда крыла ba =', ba, 'м')

print('###Определение параметров оперения')

print('###Фюзеляж отсутствует')

print('###Определение параметров шасси')
